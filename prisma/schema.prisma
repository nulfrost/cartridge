generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  did        String   @unique
  handle     String?
  created_at DateTime @default(now())
  logs       Log[]
  reviews    Review[]
  lists      List[]

  @@map("users")
}

model Game {
  id              String    @id @default(cuid())
  name            String
  cover_art_image String?
  release_date    DateTime?
  game_studios    String[]
  platforms       String[]
  slug            String    @unique
  igdb_game_id    Int       @unique

  logs    Log[]
  reviews Review[]
  lists   ListGame[]

  @@map("games")
}

model Log {
  id          String    @id @default(cuid())
  uri         String
  status      Status
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  started_at  DateTime?
  finished_at DateTime?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  game   Game   @relation(fields: [gameId], references: [id])
  gameId String

  @@index([userId])
  @@index([gameId])
  @@map("logs")
}

model Review {
  id       String  @id @default(cuid())
  rating   Int
  text     String?
  uri      String  @unique
  platform String

  reviewer   User   @relation(fields: [reviewerId], references: [id])
  reviewerId String

  game   Game   @relation(fields: [gameId], references: [id])
  gameId String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([reviewerId])
  @@index([gameId])
  @@map("reviews")
}

model Session {
  key     String @unique
  session String

  @@map("sessions")
}

model State {
  key   String @unique
  state String

  @@map("states")
}

model List {
  id          String   @id @default(cuid())
  title       String
  description String?
  is_public   Boolean  @default(true)
  uri         String
  tags        String[]
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  creator   User   @relation(fields: [creatorId], references: [id])
  creatorId String

  games ListGame[]

  @@index([creatorId])
  @@map("lists")
}

model ListGame {
  id     String  @id @default(cuid())
  list   List    @relation(fields: [listId], references: [id])
  listId String
  game   Game    @relation(fields: [gameId], references: [id])
  gameId String
  order  Int     @default(0)
  notes  String?

  @@unique([listId, gameId])
  @@index([listId])
  @@index([gameId])
  @@map("list_games")
}

enum Status {
  PLAYING
  COMPLETED
  PLANNED
  DROPPED
  ON_HOLD
}
